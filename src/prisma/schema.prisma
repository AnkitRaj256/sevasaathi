// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  phone     String?  @unique
  imageURL  String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations

  workers  Worker[]
  bookings Booking[]
  ratings  Rating[]
  messages Message[]
}

model Worker {
  id           String   @id @default(uuid())
  userId       String   @unique
  ServiceId    String
  availability Boolean  @default(false)
  experience   Int
  hourlyRate   Float
  location     String
  rating       Float    @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations

  user         User      @relation(fields: [userId], references: [id])
  service      Service   @relation(fields: [ServiceId], references: [id])
  bookings     Booking[]
  ratings      Rating[]
  locationData Location?
  messages     Message
  userId       String?
}

model Booking {
  id     String  @id @default(uuid())
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Rating {
  id     String  @id @default(uuid())
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Message {
  id     String  @id @default(uuid())
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

enum Role {
  USER
  WORKER
  ADMIN
}


model Service {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations

  workers Worker[]
}
